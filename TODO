== Things To Do and Things that are Done
=== You're Dropping the Ball Here.

* Iterate over the plugins handing it the parameters, so it can fill out
  its local needs.
* 

* all base plugins
** bin
** core
** ext
** license
** spec
** test



* highline prompting for items that are not found but required.
** use the GemPlugin::Manager for resource management too

* command approach (new, add, ...)

* fix ERB errors, show better error
* lint command
* License declaration or addition
* Hoe support

* SCM API Support for:
** Initialization, first setup
** Adding to and modification of the 'ignore' file (.boring, .cvsignore
svn:ignore, etc)
** Adding tree's to the project
** tagging the project with a release
** making sure nothing is left out of the project



=== Accomplishments!

* using 'main' have 
*** does --help do all help or just up to the previous plugins that have
   been 
** --load-all --help ? does that get all the options from all the
   plugins and then dump the to the screen?
** break --help up into sections ?  GENERAL  PLUGINS(listing all
   plugins) and then subsection for each plugin?
* Each plugin should designate its 'parameters and a brief description'
* rabal should be a GemPluginManager
** figure out plugin namespaces '/tree/builtin/base' etc.
** move tree's to be in directories based on resource matching their namespace
** bootstrap builtin to be Gem even if not, this really is only for running in-scm
* allow for insertion into project tree at an arbitrary path
* switch to Hash for children to allow for path access to data
* Tree namespaces
* cascade data access up the tree, method_missing
* Tree processing
** enter Tree
** do node thing
** process child Tree
** leave Tree
